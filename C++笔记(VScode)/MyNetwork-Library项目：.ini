MyNetwork-Library项目：

思路：


框架：
    CurrentThread

知识点：
    一、namespace:
        命名空间
            namespace CurrentThread
            {

            }
    
    二、extern:用来声明一个全局变量或者函数
        1、 extern int x;  // 'x'的定义在其他文件中
            extern只是声明，不是定义。只告诉编译器变量或函数的类型，而不会分配内存。
        
        2、用于链接外部变量
            在support.cpp 中：
                int ttt = 0;
            在main.cpp中：
                extern int ttt;
                int main(){
                    ttt = 10;
                    return 0;
                }

        3、用于链接外部函数
            同上定义函数
                extern void test(); //声明外部函数
                int main(){
                    test();
                    return 0;
                }

        4、extern "C" 的用法
            extern "C" void testFunc();  // 用C语言方式链接的函数
            此时该函数九可以被C语言代码调用了

    注意：extern关键字声明的变量或函数必须在某个文件中被定义， 否则在连接阶段会报错。
          extern关键字只能用于全局变量和函数， 不能用于函数内部的局部变量。

    三、std::function
        std::function是C++标准库中的一个模板类，用来保存一个函数、仿函数或lambda表达式
        std::function重载了operator()，使得调用函数就是普通的方式。使用前需要包含头文件<functional>

        用法：std::function<返回值类型(参数类型)> 对象名(函数、仿函数或lambda表达式);
        例： std::function<void(void)> f1(func),f2(T());
            f1();
            f2();



    socketpair()函数是一个用来创建一对相互连接的套接字的函数
        int socketpair(int domain, int type, int protocol, int sv[2]);
            domain  ：表示要使用的协议族，通常为AF_UNIX。
            type       ：指定套接字类型。常用的类型有SOCK_STREAM和SOCK_DGRAM
            protocol ：指定所使用的协议。通常为0，表示使用默认协议。
            sv          ：是一个套接字对的文件描述符数组，用来存储创建后的套接字。

    setsockopt()函数用于任意类型、任意状态套接口的设置选项值，